import React, { useState } from 'react';
import { Heart, Search, Globe, Menu, ChevronLeft, ChevronRight, Star } from 'lucide-react';

// Logo Component
const Logo = () => (
  <div className="flex items-center gap-1">
    <svg className="w-8 h-8 text-red-500" viewBox="0 0 32 32" fill="currentColor">
      <path d="M16 1c2.008 0 3.463 1.155 4.954 3.171l.125.176c1.52 2.185 3.197 4.656 6.642 4.656.552 0 1 .448 1 1s-.448 1-1 1c-2.008 0-3.463-1.155-4.954-3.171l-.125-.176C20.122 5.471 18.445 3 15 3c-.552 0-1-.448-1-1s.448-1 1-1zm-6 0c.552 0 1 .448 1 1s-.448 1-1 1c-3.445 0-5.122 2.471-6.642 4.656l-.125.176C1.742 9.848.287 11.003-1.72 11.003c-.552 0-1-.448-1-1s.448-1 1-1c3.445 0 5.122-2.471 6.642-4.656l.125-.176C6.558 2.155 8.013 1 10.02 1zm5 28c-2.008 0-3.463-1.155-4.954-3.171l-.125-.176C8.422 23.471 6.745 21 3.3 21c-.552 0-1-.448-1-1s.448-1 1-1c2.008 0 3.463 1.155 4.954 3.171l.125.176C9.9 24.532 11.577 27.003 15.022 27.003c.552 0 1 .448 1 1s-.448 1-1 1zm6 0c-.552 0-1-.448-1-1s.448-1 1-1c3.445 0 5.122-2.471 6.642-4.656l.125-.176c1.52-2.185 3.197-4.656 6.642-4.656.552 0 1 .448 1 1s-.448 1-1 1c-3.445 0-5.122 2.471-6.642 4.656l-.125.176c-1.491 2.016-2.946 3.171-4.954 3.171z"/>
    </svg>
    <span className="text-2xl font-semibold text-red-500">airbnb</span>
  </div>
);

// Navigation Button Component
const NavButton = ({ icon: Icon, label, isActive, hasNewBadge }) => (
  <button className={`flex items-center gap-2 px-4 py-2 hover:bg-gray-50 rounded-full transition-colors relative ${isActive ? 'border-b-2 border-gray-900' : ''}`}>
    <Icon className="w-5 h-5" />
    <span className="font-medium">{label}</span>
    {hasNewBadge && (
      <span className="absolute -top-1 -right-1 bg-blue-600 text-white text-xs px-2 py-0.5 rounded-full">NOVO</span>
    )}
  </button>
);

// Navigation Component
const Navigation = () => {
  const HomeIcon = () => (
    <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
    </svg>
  );

  const ExperienceIcon = () => (
    <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z" />
    </svg>
  );

  const ServiceIcon = () => (
    <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
    </svg>
  );

  return (
    <nav className="hidden lg:flex items-center gap-6">
      <NavButton icon={HomeIcon} label="Acomodações" isActive={true} />
      <NavButton icon={ExperienceIcon} label="Experiências" hasNewBadge={true} />
      <NavButton icon={ServiceIcon} label="Serviços" hasNewBadge={true} />
    </nav>
  );
};

// User Menu Component
const UserMenu = () => {
  const UserIcon = () => (
    <svg className="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 24 24">
      <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"/>
    </svg>
  );

  return (
    <div className="flex items-center gap-4">
      <button className="hidden lg:block px-4 py-3 hover:bg-gray-50 rounded-full transition-colors font-medium">
        Torne-se um anfitrião
      </button>
      <button className="p-3 hover:bg-gray-50 rounded-full transition-colors">
        <Globe className="w-5 h-5" />
      </button>
      <button className="flex items-center gap-2 p-2 pl-3 border border-gray-300 rounded-full hover:shadow-md transition-shadow">
        <Menu className="w-4 h-4" />
        <div className="w-8 h-8 bg-gray-700 rounded-full flex items-center justify-center">
          <UserIcon />
        </div>
      </button>
    </div>
  );
};

// Search Input Field Component
const SearchField = ({ label, placeholder, hasBorder = true }) => (
  <div className={`flex-1 px-6 py-3 ${hasBorder ? 'border-r border-gray-300' : ''}`}>
    <div className="text-xs font-semibold mb-1">{label}</div>
    {placeholder.includes('Buscar') ? (
      <input 
        type="text" 
        placeholder={placeholder}
        className="w-full text-sm outline-none placeholder-gray-500"
      />
    ) : (
      <div className="text-sm text-gray-500">{placeholder}</div>
    )}
  </div>
);

// Search Bar Component
const SearchBar = () => (
  <div className="max-w-screen-2xl mx-auto px-6 lg:px-20 pb-4">
    <div className="flex items-center bg-white border border-gray-300 rounded-full shadow-md hover:shadow-lg transition-shadow max-w-3xl mx-auto">
      <SearchField label="Onde" placeholder="Buscar destinos" />
      <SearchField label="Check-in" placeholder="Insira as datas" />
      <SearchField label="Checkout" placeholder="Insira as datas" />
      <div className="flex items-center gap-3 px-6 py-3">
        <div className="flex-1">
          <div className="text-xs font-semibold mb-1">Quem</div>
          <div className="text-sm text-gray-500">Hóspedes?</div>
        </div>
        <button className="bg-red-500 hover:bg-red-600 text-white p-3 rounded-full transition-colors">
          <Search className="w-5 h-5" />
        </button>
      </div>
    </div>
  </div>
);

// Header Component
const Header = () => (
  <header className="border-b border-gray-200 sticky top-0 bg-white z-50">
    <div className="max-w-screen-2xl mx-auto px-6 lg:px-20">
      <div className="flex items-center justify-between py-4">
        <Logo />
        <Navigation />
        <UserMenu />
      </div>
    </div>
    <SearchBar />
  </header>
);

// Listing Card Component
const ListingCard = ({ listing, isFavorite, onToggleFavorite }) => (
  <div className="flex-shrink-0 w-72 group cursor-pointer">
    <div className="relative rounded-xl overflow-hidden mb-3">
      <img src={listing.image} alt={listing.type} className="w-full h-72 object-cover" />
      <button 
        onClick={(e) => {
          e.preventDefault();
          onToggleFavorite(listing.id);
        }}
        className="absolute top-3 right-3 p-2 rounded-full hover:bg-white/90 transition-colors"
      >
        <Heart 
          className={`w-6 h-6 ${isFavorite ? 'fill-red-500 stroke-red-500' : 'fill-black/50 stroke-white'}`}
        />
      </button>
      <div className="absolute top-3 left-3 bg-white px-3 py-1 rounded-full text-sm font-medium">
        Preferido dos hóspedes
      </div>
    </div>
    <div className="px-1">
      <div className="flex justify-between items-start mb-1">
        <p className="font-medium text-gray-900">{listing.type}</p>
        <div className="flex items-center gap-1">
          <Star className="w-4 h-4 fill-black" />
          <span className="text-sm">{listing.rating}</span>
        </div>
      </div>
      <p className="text-gray-600 text-sm mb-1">2 noites</p>
      <p className="text-gray-900">
        <span className="font-semibold">{listing.price}</span> por 2 noites
      </p>
    </div>
  </div>
);

// Section Navigation Buttons Component
const SectionNavigation = () => (
  <div className="flex gap-2">
    <button className="p-2 border border-gray-300 rounded-full hover:shadow-md transition-shadow disabled:opacity-50">
      <ChevronLeft className="w-5 h-5" />
    </button>
    <button className="p-2 border border-gray-300 rounded-full hover:shadow-md transition-shadow">
      <ChevronRight className="w-5 h-5" />
    </button>
  </div>
);

// Listings Section Component
const ListingsSection = ({ title, listings, favorites, onToggleFavorite }) => (
  <div className="mb-12">
    <div className="flex items-center justify-between mb-6">
      <h2 className="text-2xl font-semibold">{title}</h2>
      <SectionNavigation />
    </div>
    <div className="flex gap-4 overflow-x-auto pb-4 scrollbar-hide">
      {listings.map(listing => (
        <ListingCard 
          key={listing.id} 
          listing={listing}
          isFavorite={favorites[listing.id]}
          onToggleFavorite={onToggleFavorite}
        />
      ))}
    </div>
  </div>
);

// Main App Component
export default function AirbnbUI() {
  const [favorites, setFavorites] = useState({});

  const toggleFavorite = (id) => {
    setFavorites(prev => ({ ...prev, [id]: !prev[id] }));
  };

  const saoPauloListings = [
    { id: 1, type: 'Apartamento em República', price: 'R$265', rating: '4,99', image: 'https://images.unsplash.com/photo-1522708323590-d24dbb6b0267?w=400&h=300&fit=crop' },
    { id: 2, type: 'Quarto em Jardim Paulista', price: 'R$194', rating: '4,93', image: 'https://images.unsplash.com/photo-1540518614846-7eded433c457?w=400&h=300&fit=crop' },
    { id: 3, type: 'Apartamento em Estação Campo Belo', price: 'R$458', rating: '4,95', image: 'https://images.unsplash.com/photo-1502672260266-1c1ef2d93688?w=400&h=300&fit=crop' },
    { id: 4, type: 'Apartamento em Estação Campo Belo', price: 'R$449', rating: '5,0', image: 'https://images.unsplash.com/photo-1560448204-e02f11c3d0e2?w=400&h=300&fit=crop' },
    { id: 5, type: 'Quarto em São Paulo', price: 'R$192', rating: '4,98', image: 'https://images.unsplash.com/photo-1505693416388-ac5ce068fe85?w=400&h=300&fit=crop' },
    { id: 6, type: 'Apartamento em Liberdade', price: 'R$341', rating: '5,0', image: 'https://images.unsplash.com/photo-1536376072261-38c75010e6c9?w=400&h=300&fit=crop' },
    { id: 7, type: 'Quarto em Bela Vista', price: 'R$268', rating: '4,97', image: 'https://images.unsplash.com/photo-1522771739844-6a9f6d5f14af?w=400&h=300&fit=crop' },
  ];

  const florianopolisListings = [
    { id: 8, type: 'Quarto em Córrego Grande', price: 'R$183', rating: '4,92', image: 'https://images.unsplash.com/photo-1493809842364-78817add7ffb?w=400&h=300&fit=crop' },
    { id: 9, type: 'Loft em Pantanal', price: 'R$288', rating: '4,96', image: 'https://images.unsplash.com/photo-1556020685-ae41abfc9365?w=400&h=300&fit=crop' },
    { id: 10, type: 'Apartamento em Centro', price: 'R$377', rating: '4,96', image: 'https://images.unsplash.com/photo-1522050212171-61b01dd24579?w=400&h=300&fit=crop' },
    { id: 11, type: 'Condomínio em Saco dos Limões', price: 'R$503', rating: '5,0', image: 'https://images.unsplash.com/photo-1512918728675-ed5a9ecdebfd?w=400&h=300&fit=crop' },
    { id: 12, type: 'Casa em Campeche', price: 'R$318', rating: '4,9', image: 'https://images.unsplash.com/photo-1523217582562-09d0def993a6?w=400&h=300&fit=crop' },
    { id: 13, type: 'Quarto compartilhado em Barra da Lagoa', price: 'R$141', rating: '4,81', image: 'https://images.unsplash.com/photo-1566073771259-6a8506099945?w=400&h=300&fit=crop' },
    { id: 14, type: 'Quarto em Centro', price: 'R$272', rating: '5,0', image: 'https://images.unsplash.com/photo-1484101403633-562f891dc89a?w=400&h=300&fit=crop' },
  ];

  return (
    <div className="min-h-screen bg-white">
      <Header />
      <main className="max-w-screen-2xl mx-auto px-6 lg:px-20 py-8">
        <ListingsSection 
          title="Acomodações muito procuradas em São Paulo"
          listings={saoPauloListings}
          favorites={favorites}
          onToggleFavorite={toggleFavorite}
        />
        <ListingsSection 
          title="Disponível em Florianópolis neste fim de semana"
          listings={florianopolisListings}
          favorites={favorites}
          onToggleFavorite={toggleFavorite}
        />
      </main>
    </div>
  );
}